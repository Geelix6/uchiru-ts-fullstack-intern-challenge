version: '3.7'
services:
  proxy:
    container_name: cat-pinterest-proxy
    image: nginx:1.24-alpine-slim
    volumes:
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    depends_on:
      cat-pinterest-api:
        condition: service_started
    ports:
      - "8080:80"
    networks:
      - cat-pinterest-net

  cat-pinterest-api:
    container_name: cat-pinterest-api
    image: cat-pinterest-api
    build:
      context: ./api/
    networks:
      - cat-pinterest-net
    environment:
      NODE_ENV: prod
      DB_HOST: cat-pinterest-api-pg
      DB_PORT: 5432
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USER: ${POSTGRES_USER}
      DB_NAME: ${POSTGRES_DB}
      HMAC_SECRET: hmac_secret
      HMAC_SALT: hmac_salt
      CAT_API_KEY: live_0rglkFwYzYPvhjC0c8FzSAGNuSuAkHeJkSZRvUt5ziXWx54XUOlBL4noxWFHSSRk
    depends_on:
      cat-pinterest-api-pg:
        condition: service_healthy

  cat-pinterest-front:
    container_name: cat-pinterest-front
    image: cat-pinterest-front
    build:
      context: ./front/
    networks:
      - cat-pinterest-net
    environment:
      NODE_ENV: prod

  cat-pinterest-api-pg:
    container_name: cat-pinterest-api-pg
    image: postgres:14
    networks:
      - cat-pinterest-net
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    #      PG_DATA: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 10

networks:
  cat-pinterest-net:
